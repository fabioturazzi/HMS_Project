package com.csis3275;

//Generated by Selenium IDE
import org.junit.Test;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

@TestMethodOrder(OrderAnnotation.class)
public class BlackboxTestsConsolidation {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@Before
	public void setUp() {
		System.setProperty("webdriver.chrome.driver", "c:/temp/chromedriver.exe");
		driver = new ChromeDriver();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	// This is a Selenium test for the feature Manage Facility Bookings
	// This test edits an entry from the sample data from the application and
	// asserts that the new values are found in the table containing all Facility
	// Bookings
	@SuppressWarnings("deprecation")
	@Test
    @Order(1)
	public void editFacilityBookingBlackbox() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1900, 1020));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys(Keys.ENTER);
		driver.findElement(By.linkText("Manage Facility Bookings")).click();
		driver.findElement(By.linkText("Edit")).click();
		driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);
		
		driver.findElement(By.id("facilityName")).click();
		{
			WebElement dropdown = driver.findElement(By.id("facilityName"));			
			dropdown.findElement(By.xpath("//option[. = 'THE KITCHEN']")).click();
		}
//		driver.findElement(By.id("correspBookingId")).click();
//		{
//			WebElement dropdown = driver.findElement(By.id("facilityName"));			
//			dropdown.findElement(By.xpath("//option[. = 'THE KITCHEN']")).click();
//		}
		driver.findElement(By.id("facilityName")).click();
		driver.findElement(By.id("timeStart")).click();
		{
			WebElement dropdown = driver.findElement(By.id("timeStart"));
			// dropdown.findElement(By.xpath("//option[. = '20:30']")).click();
			dropdown.findElement(By.xpath("//*[@id=\"timeStart\"]/option[25]")).click();
		}
		driver.findElement(By.id("timeStart")).click();
		driver.findElement(By.id("timeEnd")).click();
		{
			WebElement dropdown = driver.findElement(By.id("timeEnd"));
			// dropdown.findElement(By.xpath("//option[. = '22:00']")).click();
			dropdown.findElement(By.xpath("//*[@id=\"timeEnd\"]/option[30]")).click();
		}
		driver.findElement(By.id("timeEnd")).click();
		// driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.xpath("//*[@id=\"facilityBooking\"]/div[8]/div/button")).click();

		driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);
		
		// Verify that the new facility, start, and end times match the updated values
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[2]")).getText(),
				is("THE KITCHEN"));
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[7]")).getText(), is("20:00"));
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[8]")).getText(), is("22:30"));
		
	}

	// This test edits information from a customer and verifies if the new
	// information was updated
	@SuppressWarnings("deprecation")
	@Test
    @Order(2)
	public void customerManage() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1900, 1020));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys(Keys.ENTER);
		driver.findElement(By.linkText("Edit")).click();
		driver.findElement(By.id("fName")).click();
		driver.findElement(By.id("fName")).clear();
		driver.findElement(By.id("fName")).sendKeys("Johnson");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".dataRows:nth-child(2)")).click();

		// Asserts that new customer name is included
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[2]")).getText(), is("Johnson"));

	}

	// Tests if the invoice file was generated
	@Test
    @Order(3)
	public void pdfTest() {
		driver.get("http://localhost:8080/");
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.cssSelector(".form-group:nth-child(3) > .col-md-9")).click();
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".roomNav3 > a")).click();
		driver.findElement(By.linkText("Edit")).click();
		String id = driver.findElement(By.id("bid")).getAttribute("value");
		driver.findElement(By.name("tax")).click();
		{
			WebElement dropdown = driver.findElement(By.name("tax"));
			dropdown.findElement(By.xpath("//option[. = 'AB']")).click();
		}
		driver.findElement(By.name("tax")).click();
		driver.findElement(By.cssSelector(".btn-info")).click();
		driver.findElement(By.xpath("//div[2]/div[2]")).click();
		File file = new File("invoices\\invoice_booking_" + id + ".pdf");
		assertTrue(file.exists());
	}

	// Creates a booking and tests if it was created
	@Test
    @Order(4)
	public void createBookingTest() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1161, 762));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".roomNav3 > a")).click();
		driver.findElement(By.name("room")).click();
		{
			WebElement dropdown = driver.findElement(By.name("room"));
			dropdown.findElement(By.id("301")).click();
		}
		driver.findElement(By.name("room")).click();
		driver.findElement(By.id("bookingDateStart")).click();
		driver.findElement(By.id("bookingDateStart")).sendKeys("12-31-2020");
		driver.findElement(By.id("bookindDateEnd")).click();
		driver.findElement(By.id("bookindDateEnd")).sendKeys("01-03-2021");
		{
			WebElement element = driver.findElement(By.id("booking"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).clickAndHold().perform();
		}
		driver.findElement(By.id("booking")).click();
		driver.findElement(By.cssSelector(".btn")).click();
		assertEquals("Booking was successfully created!", driver.findElement(By.id("successMessage")).getText());
	}


	// This test edits information from a room and verifies if the new information
	// was updated
	@SuppressWarnings("deprecation")
	@Test
    @Order(6)
	public void roomManagement() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1900, 1020));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys(Keys.ENTER);
		driver.findElement(By.cssSelector(".roomNav1 > a")).click();
		driver.findElement(By.linkText("Edit")).click();
		driver.findElement(By.id("housekeepingStatus")).click();
		driver.findElement(By.id("housekeepingStatus")).click();
		driver.findElement(By.id("floor")).clear();
		driver.findElement(By.id("floor")).sendKeys("2");
		driver.findElement(By.id("floor")).click();
		driver.findElement(By.cssSelector(".form-group:nth-child(2)")).click();
		driver.findElement(By.id("roomNumber")).clear();
		driver.findElement(By.id("roomNumber")).sendKeys("210");
		driver.findElement(By.id("roomType")).click();

		driver.findElement(By.id("roomType")).click();
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".dataRows:nth-child(2) > td:nth-child(2)")).click();
		driver.findElement(By.cssSelector(".dataRows:nth-child(2) > td:nth-child(4)")).click();

		// Asserts that new room number is updated
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[2]")).getText(), is("210"));

		// Asserts that new floor is updated
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[4]")).getText(), is("2"));
	}

	// This test makes a search for a range of dates and verify that the correct
	// amount of rooms was found
	@SuppressWarnings("deprecation")
	@Test
    @Order(7)
	public void searchRooms() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1900, 1020));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("doeJohn");
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.id("passwordForm")).sendKeys(Keys.ENTER);

		((JavascriptExecutor) driver)
				.executeScript("document.getElementById('startDateFormControl').removeAttribute('readonly');");
		((JavascriptExecutor) driver)
				.executeScript("document.getElementById('endDateFormControl').removeAttribute('readonly');");

		driver.findElement(By.id("startDateFormControl")).sendKeys("22-12-2020");
		driver.findElement(By.id("endDateFormControl")).sendKeys("23-12-2020");

		//
		driver.findElement(By.id("submitSearch")).click();
		driver.findElement(By.cssSelector(".dataRows:nth-child(2) > .availRooms")).click();

		// Asserts that 2 premium rooms were found
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/div/table/tbody/tr[2]/td[8]")).getText(), is("2"));

	}

	// This test edits information from a staff and verifies if the new information
	// was updated
	@SuppressWarnings("deprecation")
	@Test
    @Order(8)
	public void staffManage() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1900, 1020));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys(Keys.ENTER);
		driver.findElement(By.cssSelector(".userNav2 > a")).click();
		driver.findElement(By.linkText("Edit")).click();
		driver.findElement(By.id("fName")).click();
		driver.findElement(By.id("fName")).clear();
		driver.findElement(By.id("fName")).sendKeys("Administrator");
		driver.findElement(By.id("fName")).sendKeys(Keys.ENTER);
		driver.findElement(By.cssSelector(".dataRows")).click();

		// Asserts that new name is updated
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[2]")).getText(),
				is("Administrator"));

	}

	// This test adds a facility and checks if new entry was added
	@SuppressWarnings("deprecation")
	@Test
    @Order(9)
	public void facilitiesBlackboxTesting() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1050, 660));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.cssSelector(".form-group:nth-child(3)")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.cssSelector("h3:nth-child(1)")).click();
		driver.findElement(By.cssSelector(".form-group:nth-child(4)")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.cssSelector(".form-group:nth-child(5) > .col-md-offset-3")).click();
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".facilityNav1 > a")).click();
		driver.findElement(By.id("facilityName")).click();
		driver.findElement(By.id("facilityName")).sendKeys("TESTINGROOM");
		driver.findElement(By.id("facilityType")).click();
		{
			WebElement dropdown = driver.findElement(By.id("facilityType"));
			dropdown.findElement(By.xpath("//option[. = 'Meeting Room']")).click();
		}
		driver.findElement(By.id("facilityType")).click();
		{
			WebElement element = driver.findElement(By.id("capacity"));
			Actions builder = new Actions(driver);
			builder.doubleClick(element).perform();
		}
		driver.findElement(By.id("capacity")).sendKeys("3");
		driver.findElement(By.id("capacity")).click();
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector("body")).click();
		driver.findElement(By.xpath("//td[contains(.,\'TESTINGROOM\')]")).click();
		assertThat(driver.findElement(By.xpath("//td[contains(.,\'TESTINGROOM\')]")).getText(), is("TESTINGROOM"));
	}

	// Checks if user can access his profile
	@Test
    @Order(10)
	public void viewProfile() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1154, 758));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("doeJohn");
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.linkText("My Profile")).click();
		assertEquals("doeJohn", driver.findElement(By.xpath("//h2")).getText());
	}


	// This test edits information from a room type and verifies if the new
	// information was updated
	@SuppressWarnings("deprecation")
	@Test
    @Order(11)
	public void roomTypeManagement() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1900, 1020));
		driver.findElement(By.id("user")).click();
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.id("passwordForm")).sendKeys(Keys.ENTER);
		driver.findElement(By.cssSelector(".roomNav2 > a")).click();
		driver.findElement(By.linkText("Edit")).click();

		driver.findElement(By.name("roomType")).click();
		driver.findElement(By.name("roomType")).clear();
		driver.findElement(By.name("roomType")).sendKeys("Premium Plus");
		{
			WebElement element = driver.findElement(By.cssSelector(".form-group:nth-child(5) > .col-md-3"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).clickAndHold().perform();
		}
		{
			WebElement element = driver.findElement(By.cssSelector(".form-group:nth-child(5) > .col-md-3"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		{
			WebElement element = driver.findElement(By.cssSelector(".form-group:nth-child(5) > .col-md-3"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).release().perform();
		}
		driver.findElement(By.id("roomType")).click();
		driver.findElement(By.id("capacity")).clear();
		driver.findElement(By.id("capacity")).sendKeys("6");
		driver.findElement(By.cssSelector(".btn")).click();

		// Asserts that new capacity is updated
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[7]")).getText(), is("6"));

		// Asserts that new room type name is updated
		assertThat(driver.findElement(By.xpath("/html/body/div[2]/table/tbody/tr[2]/td[3]")).getText(),
				is("Premium Plus"));
	}

	// This test register a new user and asserts if registration was succesfull
	@SuppressWarnings("deprecation")
	@Test
    @Order(12)
	public void registrationTest() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1900, 1020));
		driver.findElement(By.cssSelector(".form-group:nth-child(6) > .col-md-offset-3")).click();
		driver.findElement(By.id("fName")).click();
		driver.findElement(By.id("fName")).sendKeys("Fabio");
		driver.findElement(By.id("lName")).sendKeys("Turazzi");
		driver.findElement(By.id("username")).sendKeys("fabioturazzi");
		driver.findElement(By.id("password")).sendKeys("11111111");
		driver.findElement(By.id("confPassword")).click();
		driver.findElement(By.id("confPassword")).sendKeys("11111111");
		driver.findElement(By.id("email")).click();
		driver.findElement(By.id("email")).sendKeys("fabio@email.com");
		driver.findElement(By.id("address")).click();
		driver.findElement(By.id("address")).sendKeys("Address");
		driver.findElement(By.id("phoneNumber")).click();
		driver.findElement(By.id("phoneNumber")).sendKeys("Phone");
		driver.findElement(By.id("passQuestion")).sendKeys("First dog?");
		driver.findElement(By.id("passAnswer")).sendKeys("Toquinho");
		driver.findElement(By.cssSelector(".form-group:nth-child(11) > .col-md-3")).click();
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.id("pageTitle")).click();

		// Asserts that the registration was successful
		assertThat(driver.findElement(By.id("pageTitle")).getText(), is("Successful Registration"));
	}

	// Edits a booking and verifies new information
	@Test
    @Order(13)
	public void editBookingTest() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1161, 762));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("user")).click();
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".roomNav3 > a")).click();
		driver.findElement(By.cssSelector(".dataRows:nth-child(3) > td:nth-child(15) > a")).click();
		driver.findElement(By.cssSelector("label:nth-child(2) > input")).click();
		driver.findElement(By.cssSelector(".btn-primary")).click();
		assertEquals("true", driver.findElement(By.cssSelector(".dataRows:nth-child(3) > td:nth-child(7)")).getText());
	}

	// This test logs in with a customer account and attempts to click My Profile
	// section (customers only)
	@Test
    @Order(14)
	public void customerLoginTest() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1050, 660));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("doeJohn");
		driver.findElement(By.id("user")).click();
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.linkText("My Profile")).click();
		driver.findElement(By.linkText("Logout")).click();
	}

	// This test logs in with a staff account
	@Test
    @Order(15)
	public void staffLoginTest() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1050, 660));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("admin");
		driver.findElement(By.id("user")).click();
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("admin");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.linkText("Logout")).click();
	}

	// This test submits a booking and deletes it
	@Test
    @Order(16)
	public void booking() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1264, 666));
		driver.findElement(By.cssSelector("body")).click();
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("doeJohn");
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.id("startDateFormControl")).click();
		driver.findElement(By.id("startDateFormControl")).sendKeys("01/01/2021");
		driver.findElement(By.id("endDateFormControl")).click();
		driver.findElement(By.id("endDateFormControl")).sendKeys("01/10/2021");
		driver.findElement(By.id("submitSearch")).click();
		driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);
		driver.findElement(By.linkText("Book a Room")).click();
		driver.findElement(By.cssSelector(".btn:nth-child(6)")).click();
		driver.findElement(By.cssSelector(".confirm-booking")).click();
		driver.findElement(By.linkText("Delete")).click();
		driver.findElement(By.cssSelector(".btn-danger")).click();
		driver.findElement(By.linkText("Logout")).click();
	}

	// Resets a password and attempts to login with new password, asserts that login
	// was succesfull
	@Test
    @Order(17)
	public void resetPasswordTest() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1150, 754));
		driver.findElement(By.id("user")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("doeJohn");
		driver.findElement(By.id("user")).click();
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".navbar")).click();
		driver.findElement(By.linkText("My Profile")).click();
		driver.findElement(By.cssSelector(".btn-info")).click();
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.id("password")).click();
		driver.findElement(By.id("password")).sendKeys("passJohnDoe");
		driver.findElement(By.id("confPassword")).click();
		driver.findElement(By.id("confPassword")).sendKeys("passJohnDoe");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".alert")).click();
		driver.findElement(By.linkText("Logout")).click();
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("doeJohn");
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.xpath("//h1[@id=\'pageTitle\']")).click();
		assertEquals("Room Search", driver.findElement(By.xpath("//h1[@id=\'pageTitle\']")).getText());
	}

	// Edits profile and verify that new information was saved
	@Test
    @Order(18)
	public void editProfile() {
		driver.get("http://localhost:8080/");
		driver.manage().window().setSize(new Dimension(1157, 760));
		driver.findElement(By.id("usernameForm")).click();
		driver.findElement(By.id("usernameForm")).sendKeys("doeJohn");
		driver.findElement(By.id("passwordForm")).click();
		driver.findElement(By.id("passwordForm")).sendKeys("passJohnDoe");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.linkText("My Profile")).click();
		driver.findElement(By.id("editBtn")).click();
		driver.findElement(By.id("firstName")).getAttribute("value");
		driver.findElement(By.id("firstName")).click();
		driver.findElement(By.id("firstName")).sendKeys("ny");
		driver.findElement(By.id("firstName")).click();
		driver.findElement(By.id("saveEdit")).click();
		driver.findElement(By.id("profFName")).getAttribute("value");
		assertEquals("Johnny", driver.findElement(By.id("profFName")).getAttribute("value"));
	}
}
